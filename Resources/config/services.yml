parameters:
    markup_addressing.twig.delimiter.template_name: '#'

services:
    _defaults:
        public: false
        autowire: false
        autoconfigure: false

    Markup\Addressing\Renderer\AddressRenderer:
        arguments:
            - '@markup_addressing.handlebars.template.provider'
            - '@markup_addressing.country_name.provider'
            - '@Markup\Addressing\Provider\LocaleProvider'
        public: true
    markup_addressing.address.renderer: '@Markup\Addressing\Renderer\AddressRenderer'
    Markup\Addressing\Renderer\AddressRendererInterface: '@Markup\Addressing\Renderer\AddressRenderer'
    Markup\Addressing\Provider\CountryNameProvider:
        arguments:
            - '@Markup\Addressing\Provider\LocaleProvider'
        public: true
    markup_addressing.country_name.provider: '@Markup\Addressing\Provider\CountryNameProvider'
    Markup\Addressing\Provider\CountryNameProviderInterface: '@Markup\Addressing\Provider\CountryNameProvider'
    Markup\AddressingBundle\Checker\PostalCodeChecker:
        arguments:
            - '@validator'
        public: true
    markup_addressing.postal_code_checker: '@Markup\AddressingBundle\Checker\PostalCodeChecker'
    markup_addressing.country_name.extension:
        class: 'Markup\Addressing\Twig\Extension\CountryNameExtension'
        arguments:
            - '@markup_addressing.country_name.provider'
        tags:
            - { name: twig.extension }
    markup_addressing.locale_provider.default:
        class: 'Markup\Addressing\Provider\LocaleProvider'
        arguments:
            - '%locale%'
    markup_addressing.handlebars.template.provider:
        class: 'Markup\Addressing\Provider\IntlAddressHandlebarsTemplateProvider'
        arguments:
            - ['be', 'ca', 'dk', 'fi', 'gb', 'gg', 'ie', 'im', 'je', 'nl', 'no', 'se', 'us', 'jp']
            - '%kernel.cache_dir%/addressing'
    markup_addressing.canonicalizer.postal_code:
        class: 'Markup\Addressing\Canonicalizer\PostalCodeCanonicalizer'
    markup_addressing.validator.postal_code:
        class: 'Markup\AddressingBundle\Validator\PostalCodeValidator'
        arguments:
            - '@markup_addressing.validator.postal_code.provider'
        tags:
            - { name: validator.constraint_validator, alias: postal_code }
    markup_addressing.validator.postal_code.regex:
        class: 'Markup\AddressingBundle\Validator\RegexPostalCodeValidator'
        tags:
            - { name: validator.constraint_validator, alias: regex_postal_code }
    markup_addressing.validator.postal_code.provider:
        class: 'Markup\AddressingBundle\Validator\LocalizedPostalCodeValidatorClosureProvider'
        arguments:
            - '@validator.validator_factory'
            - '@markup_addressing.country_regex_override_provider'
    markup_addressing.validator.fixed_length_digit:
        class: 'Markup\AddressingBundle\Validator\FixedLengthDigitPostalCodeValidator'
        tags:
            - { name: validator.constraint_validator, alias: fixed_length_digit_postal_code }
    markup_addressing.validator.multiple_regex:
        class: 'Markup\AddressingBundle\Validator\MultipleRegexValidator'
        tags:
            - { name: validator.constraint_validator, alias: multiple_regex }
    markup_addressing.country_regex_override_provider:
        class: 'Markup\AddressingBundle\Validator\CountryRegexOverrideProvider'
    markup_addressing.validator.region:
        class: 'Markup\AddressingBundle\Validator\RegionValidator'
        arguments:
            - '%markup_addressing.require_strict_regions%'
        tags:
            - { name: validator.constraint_validator, alias: addressing_region }

    Markup\AddressingBundle\Command\:
        resource: '../../Command/*'
        autowire: true
        autoconfigure: true
